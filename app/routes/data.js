// Generated by CoffeeScript 1.4.0
(function() {
  var TreeDatabase, inspect;

  inspect = require('util').inspect;

  TreeDatabase = require('../database').TreeDatabase;

  module.exports = function(app, config) {
    var ensureAuth, myTreeFn, treeDb;
    console.log("Defining DATA routes");
    treeDb = new TreeDatabase(config);
    ensureAuth = function(callback) {
      return function(req, res) {
        if (!(req.user != null) || !(req.user._id != null)) {
          return res.send("Please authenticate", 401);
        } else {
          return callback(req, res, req.user._id);
        }
      };
    };
    myTreeFn = ensureAuth(function(req, res, userId) {
      var createOrUpdateFn, data;
      data = req.body;
      createOrUpdateFn = function() {
        return treeDb.createOrUpdate(userId, data, function(err, dbRes) {
          if (err) {
            console.error("ERROR: in treeDb.createOrUpdate");
            console.error(inspect(err));
            return res.send("Database error", 500);
          } else {
            return res.json({
              id: dbRes.id
            });
          }
        });
      };
      if ((data.id != null) && (data.id.length != null)) {
        return treeDb.findById(data.id, function(err, doc) {
          if (doc && doc.user.id !== req.user._id) {
            console.error("ERROR: attempt to sabotage another user's tree");
            console.error("(user: " + req.user._id + ", target ID: " + data.id + ")");
            return res.send("Unauthorised", 401);
          } else {
            if (!doc) {
              console.error("ERROR: tree `" + data.id + "` doesn't exist but referenced by `" + req.user._id + "`; removing ID");
              delete data.id;
            }
            return createOrUpdateFn();
          }
        });
      } else {
        return createOrUpdateFn();
      }
    });
    app.post("/json/my_tree", myTreeFn);
    return app.put("/json/my_tree", myTreeFn);
  };

}).call(this);
